<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>HR Dashboard</title>
<link rel="stylesheet" href="/public/css/styles.css">    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="dashboard-header">
        <h1>HR Dashboard</h1>
        <div class="metrics">
            <p>Total Employees: {{totalEmployees}}</p>
            <p>Average Tenure in Months: {{averageTenureResult}}</p>
            <p>Churn Rate: {{churnRate}}%</p>
        </div>
    </div>
    <div class="chart-grid">
        <div class="chart-block full-width">
            <h2>Employee-Wise Distribution</h2>
            <canvas id="deptChart"></canvas>
        </div>
        <div class="chart-block">
            <h2>Incomplete Boarding Tasks</h2>
            <canvas id="boardingChart"></canvas>
        </div>
        <div class="chart-block">
            <h2>Employee Diversity</h2>
            <canvas id="diversityChart"></canvas>
        </div>
        <div class="chart-block">
            <h2>Gender Distribution</h2>
            <canvas id="genderChart"></canvas>
        </div>
        <div class="chart-block">
            <h2>Veterans and Disabilities Distribution</h2>
            <canvas id="veteranDisabilityChart"></canvas>
        </div>
        <div class="chart-block">
            <h2>Churn Rate Over Time</h2>
            <canvas id="churnRateChart"></canvas>
        </div>
    </div>
    <!--<script src="scripts/charts.js"></script>-->
    <!-- my script starts here to show the charts-->

    <script>
document.addEventListener('DOMContentLoaded', function () {
    // Department Chart
    const ctxDept = document.getElementById('deptChart').getContext('2d');
    const deptData = JSON.parse('{{{departments}}}');
    new Chart(ctxDept, {
        type: 'bar',
        data: {
            labels: deptData.labels,
            datasets: [{
                label: 'Employees per Department',
                data: deptData.data,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

    // Incomplete Boarding Tasks Chart
    const ctxBoarding = document.getElementById('boardingChart').getContext('2d');
    const boardingData = JSON.parse('{{{incompleteBoardingTasks}}}');
    new Chart(ctxBoarding, {
        type: 'bar',
        data: {
            labels: boardingData.labels,
            datasets: [{
                label: 'Due Dates per Employee',
                data: boardingData.data.map(d => d.split(', ').length),
                backgroundColor: 'rgba(153, 102, 255, 0.2)',
                borderColor: 'rgba(153, 102, 255, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

    // Employee Diversity Chart
    const ctxDiversity = document.getElementById('diversityChart').getContext('2d');
    const diversityData = JSON.parse('{{{diversity}}}');
    new Chart(ctxDiversity, {
        type: 'pie',
        data: {
            labels: diversityData.labels,
            datasets: [{
                label: 'Employee Diversity',
                data: diversityData.data,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        }
    });

    // Gender Distribution Chart
    const ctxGender = document.getElementById('genderChart').getContext('2d');
    const genderData = JSON.parse('{{{genderDistribution}}}');
    new Chart(ctxGender, {
        type: 'pie',
        data: {
            labels: genderData.labels,
            datasets: [{
                label: 'Gender Distribution',
                data: genderData.data,
                backgroundColor: ['rgba(54, 162, 235, 0.6)', 'rgba(255, 99, 132, 0.6)'],
                borderColor: ['rgba(54, 162, 235, 1)', 'rgba(255, 99, 132, 1)'],
                borderWidth: 1
            }]
        }
    });

    // Veterans and Disabilities Distribution Chart
    const ctxVetDis = document.getElementById('veteranDisabilityChart').getContext('2d');
    const vetDisData = JSON.parse('{{{veteranAndDisabilityDistribution}}}');
    new Chart(ctxVetDis, {
        type: 'pie',
        data: {
            labels: vetDisData.labels,
            datasets: [{
                label: 'Veterans and Disabilities Distribution',
                data: vetDisData.data,
                backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(201, 203, 207, 0.6)'],
                borderColor: ['rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(201, 203, 207, 1)'],
                borderWidth: 1
            }]
        }
    });

    // Churn Rate Over Time Chart
    const ctxChurnRate = document.getElementById('churnRateChart').getContext('2d');
    new Chart(ctxChurnRate, {
        type: 'line',
        data: {
            labels: ['January', 'February', 'March', 'April'],
            datasets: [{
                label: 'Monthly Churn Rate',
                data: [5, 7, 3, 6],
                backgroundColor: 'rgba(255, 99, 132, 0.5)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 2,
                fill: false
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
});
</script>



    <a class="page-link" href="/hr">Home</a>






</body>
</html>
